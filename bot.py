import os
import logging
from datetime import datetime, timedelta
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from supabase import create_client, Client

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_KEY = os.getenv("SUPABASE_KEY")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Supabase –∫–ª–∏–µ–Ω—Ç–∞
supabase: Client = create_client(SUPABASE_URL, SUPABASE_KEY)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        user = update.effective_user
        telegram_id = user.id
        user_name = user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
        response = supabase.table("users").select("*").eq("telegram_id", telegram_id).execute()
        
        if len(response.data) == 0:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            trial_ends_at = (datetime.now() + timedelta(days=3)).isoformat()
            new_user = {
                "telegram_id": telegram_id,
                "name": user_name,
                "tariff": "trial",
                "trial_ends_at": trial_ends_at,
                "created_at": datetime.now().isoformat()
            }
            user_data = supabase.table("users").insert(new_user).execute()
            
            await update.message.reply_text(
                f"–ü—Ä–∏–≤–µ—Ç {user_name}! üëã\n"
                f"–Ø –±–æ—Ç-–Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥. –£ –≤–∞—Å –Ω–∞—á–∞–ª—Å—è –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –Ω–∞ 3 –¥–Ω—è.\n\n"
                f"–ù–∞–ø–∏—à–∏—Ç–µ '–º–µ–Ω—é' –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–±–Ω–æ–≥–æ –º–µ–Ω—é –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ –ø–∏—Ç–∞–Ω–∏–∏."
            )
        else:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            user_data = response.data[0]
            days_left = (datetime.fromisoformat(user_data['trial_ends_at']) - datetime.now()).days
            
            await update.message.reply_text(
                f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user_name}! üåü\n"
                f"–£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å {days_left} –¥–Ω–µ–π –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞.\n\n"
                f"–ù–∞–ø–∏—à–∏—Ç–µ '–º–µ–Ω—é' –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ–Ω—é."
            )
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥. –ù–∞–ø–∏—à–∏—Ç–µ '–º–µ–Ω—é' –¥–ª—è –ø—Ä–æ–±–Ω–æ–≥–æ –¥–Ω—è.")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        user = update.effective_user
        user_message = update.message.text
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é (–±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –ø–æ–∑–∂–µ)
        
        if "–º–µ–Ω—é" in user_message.lower():
            await send_trial_menu(update)
        else:
            await update.message.reply_text(
                "–ü–æ–∫–∞ —è —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –º–µ–Ω—é –∏ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –±–∞–∑–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã.\n"
                "–ù–∞–ø–∏—à–∏—Ç–µ '–º–µ–Ω—é' –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–±–Ω–æ–≥–æ –º–µ–Ω—é –Ω–∞ –¥–µ–Ω—å."
            )
            
    except Exception as e:
        logger.error(f"Error: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

async def send_trial_menu(update: Update):
    menu_text = """
üçΩÔ∏è –ü–†–û–ë–ù–û–ï –ú–ï–ù–Æ –ù–ê –î–ï–ù–¨:

–ó–ê–í–¢–†–ê–ö: –ë–µ–ª–∫–æ–≤—ã–π –æ–º–ª–µ—Ç
‚Ä¢ 2 —è–π—Ü–∞ + 100–≥ —Ç–≤–æ—Ä–æ–≥–∞ + –æ–≤–æ—â–∏
‚Ä¢ –ö–ë–ñ–£: 320 –∫–∫–∞–ª ‚Ä¢ –ë: 28–≥ ‚Ä¢ –ñ: 18–≥ ‚Ä¢ –£: 12–≥

–û–ë–ï–î: –ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞ —Å –≥—Ä–µ—á–∫–æ–π  
‚Ä¢ 150–≥ –∫—É—Ä–∏—Ü—ã + 100–≥ –≥—Ä–µ—á–∫–∏ + —Å–∞–ª–∞—Ç
‚Ä¢ –ö–ë–ñ–£: 450 –∫–∫–∞–ª ‚Ä¢ –ë: 35–≥ ‚Ä¢ –ñ: 12–≥ ‚Ä¢ –£: 45–≥

–£–ñ–ò–ù: –†—ã–±–∞ –Ω–∞ –ø–∞—Ä—É —Å –æ–≤–æ—â–∞–º–∏
‚Ä¢ 200–≥ —Ç—Ä–µ—Å–∫–∏ + –±—Ä–æ–∫–∫–æ–ª–∏ + –º–æ—Ä–∫–æ–≤—å
‚Ä¢ –ö–ë–ñ–£: 280 –∫–∫–∞–ª ‚Ä¢ –ë: 25–≥ ‚Ä¢ –ñ: 8–≥ ‚Ä¢ –£: 20–≥

üìã –í –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:
‚Ä¢ –ú–µ–Ω—é –Ω–∞ –Ω–µ–¥–µ–ª—é —Å –Ω–æ–≤—ã–º–∏ –±–ª—é–¥–∞–º–∏
‚Ä¢ –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ —Å —ç–∫–æ–Ω–æ–º–∏–µ–π
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
"""
    await update.message.reply_text(menu_text)

def main():
    application = Application.builder().token(BOT_TOKEN).build()
    
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π Supabase...")
    application.run_polling()

if __name__ == "__main__":
    main()
