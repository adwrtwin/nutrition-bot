import os
import logging
import threading
import json
from datetime import datetime, timedelta
from flask import Flask
from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext

app = Flask(__name__)

@app.route('/')
def home():
    return "Nutrition Bot is running!", 200

def run_flask():
    if os.environ.get('RENDER'):
        os.environ['WERKZEUG_RUN_MAIN'] = 'true'
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port, debug=False, use_reloader=False)

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', 
    level=logging.INFO
)
logger = logging.getLogger(__name__)

BOT_TOKEN = os.getenv("BOT_TOKEN")

# –§–∞–π–ª–æ–≤–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
DATA_FILE = "user_data.json"

def load_user_data():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ JSON —Ñ–∞–π–ª–∞"""
    try:
        if os.path.exists(DATA_FILE):
            with open(DATA_FILE, 'r', encoding='utf-8') as f:
                return json.load(f)
        return {}
    except Exception as e:
        logger.error(f"Error loading user data: {e}")
        return {}

def save_user_data(data):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ JSON —Ñ–∞–π–ª"""
    try:
        with open(DATA_FILE, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
        return True
    except Exception as e:
        logger.error(f"Error saving user data: {e}")
        return False

def get_user(user_id):
    """–ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    data = load_user_data()
    return data.get(str(user_id))

def save_user(user_id, user_data):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    data = load_user_data()
    data[str(user_id)] = user_data
    return save_user_data(data)

def start(update: Update, context: CallbackContext) -> None:
    user = update.effective_user
    user_id = user.id
    user_name = user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    existing_user = get_user(user_id)
    
    if existing_user:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        trial_ends = datetime.fromisoformat(existing_user['trial_ends'])
        days_left = (trial_ends - datetime.now()).days
        
        if days_left > 0:
            message = (
                f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user_name}! üåü\n"
                f"–£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å {days_left} –¥–Ω–µ–π –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞.\n\n"
                f"–ù–∞–ø–∏—à–∏—Ç–µ '–º–µ–Ω—é' –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ–Ω—é."
            )
        else:
            message = (
                f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user_name}! ‚è∞\n"
                f"–í–∞—à –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω.\n\n"
                f"–ù–∞–ø–∏—à–∏—Ç–µ '—Ç–∞—Ä–∏—Ñ—ã' –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –ø–æ–ª–Ω—É—é –≤–µ—Ä—Å–∏—é."
            )
    else:
        # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        trial_ends = (datetime.now() + timedelta(days=3)).isoformat()
        new_user_data = {
            "name": user_name,
            "telegram_id": user_id,
            "joined_date": datetime.now().isoformat(),
            "trial_ends": trial_ends,
            "tariff": "trial",
            "goals": [],
            "allergies": [],
            "last_active": datetime.now().isoformat()
        }
        
        if save_user(user_id, new_user_data):
            message = (
                f"–ü—Ä–∏–≤–µ—Ç {user_name}! üëã\n"
                f"–Ø –±–æ—Ç-–Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥. –£ –≤–∞—Å –Ω–∞—á–∞–ª—Å—è –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –Ω–∞ 3 –¥–Ω—è.\n\n"
                f"–î–∞–≤–∞–π—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è! –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏:\n\n"
                f"1. –ö–∞–∫–∏–µ —É –≤–∞—Å —Ü–µ–ª–∏? (–ø–æ—Ö—É–¥–µ–Ω–∏–µ, –Ω–∞–±–æ—Ä –º–∞—Å—Å—ã, –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ, –∑–¥–æ—Ä–æ–≤—å–µ)\n"
                f"2. –ï—Å—Ç—å –ª–∏ –∞–ª–ª–µ—Ä–≥–∏–∏ –∏–ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è?\n"
                f"3. –ö–∞–∫–æ–π —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏? (–Ω–∏–∑–∫–∏–π, —Å—Ä–µ–¥–Ω–∏–π, –≤—ã—Å–æ–∫–∏–π)\n\n"
                f"–ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ '–º–µ–Ω—é' –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–±–Ω–æ–≥–æ –º–µ–Ω—é."
            )
        else:
            message = (
                f"–ü—Ä–∏–≤–µ—Ç {user_name}! üëã\n"
                f"–Ø –±–æ—Ç-–Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥. –£ –≤–∞—Å –Ω–∞—á–∞–ª—Å—è –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –Ω–∞ 3 –¥–Ω—è.\n\n"
                f"–ù–∞–ø–∏—à–∏—Ç–µ '–º–µ–Ω—é' –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–±–Ω–æ–≥–æ –º–µ–Ω—é."
            )
    
    update.message.reply_text(message)

def handle_message(update: Update, context: CallbackContext) -> None:
    user = update.effective_user
    user_id = user.id
    text = update.message.text.lower()
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    user_data = get_user(user_id)
    if user_data:
        user_data["last_active"] = datetime.now().isoformat()
        save_user(user_id, user_data)
    
    if "–º–µ–Ω—é" in text:
        menu_text = """
üçΩÔ∏è –ü–†–û–ë–ù–û–ï –ú–ï–ù–Æ –ù–ê –î–ï–ù–¨:

–ó–ê–í–¢–†–ê–ö: –ë–µ–ª–∫–æ–≤—ã–π –æ–º–ª–µ—Ç
‚Ä¢ 2 —è–π—Ü–∞ + 100–≥ —Ç–≤–æ—Ä–æ–≥–∞ + –æ–≤–æ—â–∏
‚Ä¢ –ö–ë–ñ–£: 320 –∫–∫–∞–ª ‚Ä¢ –ë: 28–≥ ‚Ä¢ –ñ: 18–≥ ‚Ä¢ –£: 12–≥

–û–ë–ï–î: –ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞ —Å –≥—Ä–µ—á–∫–æ–π  
‚Ä¢ 150–≥ –∫—É—Ä–∏—Ü—ã + 100–≥ –≥—Ä–µ—á–∫–∏ + —Å–∞–ª–∞—Ç
‚Ä¢ –ö–ë–ñ–£: 450 –∫–∫–∞–ª ‚Ä¢ –ë: 35–≥ ‚Ä¢ –ñ: 12–≥ ‚Ä¢ –£: 45–≥

–£–ñ–ò–ù: –†—ã–±–∞ –Ω–∞ –ø–∞—Ä—É —Å –æ–≤–æ—â–∞–º–∏
‚Ä¢ 200–≥ —Ç—Ä–µ—Å–∫–∏ + –±—Ä–æ–∫–∫–æ–ª–∏ + –º–æ—Ä–∫–æ–≤—å
‚Ä¢ –ö–ë–ñ–£: 280 –∫–∫–∞–ª ‚Ä¢ –ë: 25–≥ ‚Ä¢ –ñ: 8–≥ ‚Ä¢ –£: 20–≥

üìã –í –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:
‚Ä¢ –ú–µ–Ω—é –Ω–∞ –Ω–µ–¥–µ–ª—é —Å –Ω–æ–≤—ã–º–∏ –±–ª—é–¥–∞–º–∏
‚Ä¢ –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ —Å —ç–∫–æ–Ω–æ–º–∏–µ–π
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
"""
        update.message.reply_text(menu_text)
    
    elif "—Ç–∞—Ä–∏—Ñ—ã" in text:
        tariffs_text = """
üíé –î–û–°–¢–£–ü–ù–´–ï –¢–ê–†–ò–§–´:

üîπ –ü–†–û–ë–ù–´–ô (3 –¥–Ω—è) - –ë–ï–°–ü–õ–ê–¢–ù–û
‚Ä¢ –ë–∞–∑–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
‚Ä¢ –ü—Ä–æ–±–Ω–æ–µ –º–µ–Ω—é –Ω–∞ 1 –¥–µ–Ω—å

üîπ –ü–ï–†–°–û–ù–ê–õ–¨–ù–´–ô (990 —Ä—É–±./–º–µ—Å)
‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –Ω–∞ –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é
‚Ä¢ –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ —Å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞–º–∏
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—Ç–∞–Ω–∏—è

üîπ –°–ï–ú–ï–ô–ù–´–ô (2500 —Ä—É–±./–º–µ—Å)
‚Ä¢ –î–æ 5 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
‚Ä¢ –û–±—â–∏–π –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫
‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –º–µ–Ω—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ

–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Ç–∞—Ä–∏—Ñ –Ω–∞–ø–∏—à–∏—Ç–µ '—Ö–æ—á—É —Ç–∞—Ä–∏—Ñ'
"""
        update.message.reply_text(tariffs_text)
    
    elif "—Ö–æ—á—É —Ç–∞—Ä–∏—Ñ" in text:
        update.message.reply_text(
            "–û—Ç–ª–∏—á–Ω–æ! –î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º:\n"
            "‚Ä¢ –ñ–µ–ª–∞–µ–º—ã–π —Ç–∞—Ä–∏—Ñ (–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π/–°–µ–º–µ–π–Ω—ã–π)\n"
            "‚Ä¢ –í–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\n\n"
            "–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!"
        )
    
    else:
        # –ê–Ω–∞–ª–∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
        user_data = get_user(user_id)
        if user_data:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π –∏ –µ—â–µ –Ω–µ —É–∫–∞–∑–∞–ª —Ü–µ–ª–∏
            if not user_data.get("goals"):
                if any(word in text for word in ["–ø–æ—Ö—É–¥–µ–Ω–∏–µ", "–ø–æ—Ö—É–¥–µ—Ç—å", "—Å–±—Ä–æ—Å–∏—Ç—å –≤–µ—Å"]):
                    user_data.setdefault("goals", []).append("weight_loss")
                    save_user(user_id, user_data)
                    update.message.reply_text("‚úÖ –ó–∞–ø–∏—Å–∞–ª —Ü–µ–ª—å: –ø–æ—Ö—É–¥–µ–Ω–∏–µ. –ï—Å—Ç—å –µ—â–µ —Ü–µ–ª–∏?")
                    return
                elif any(word in text for word in ["–Ω–∞–±–æ—Ä", "–º–∞—Å—Å–∞", "–º—ã—à—Ü—ã"]):
                    user_data.setdefault("goals", []).append("muscle_gain")
                    save_user(user_id, user_data)
                    update.message.reply_text("‚úÖ –ó–∞–ø–∏—Å–∞–ª —Ü–µ–ª—å: –Ω–∞–±–æ—Ä –º—ã—à–µ—á–Ω–æ–π –º–∞—Å—Å—ã. –ï—Å—Ç—å –µ—â–µ —Ü–µ–ª–∏?")
                    return
                elif any(word in text for word in ["–ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ", "—Ñ–æ—Ä–º–∞"]):
                    user_data.setdefault("goals", []).append("maintenance")
                    save_user(user_id, user_data)
                    update.message.reply_text("‚úÖ –ó–∞–ø–∏—Å–∞–ª —Ü–µ–ª—å: –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã. –ï—Å—Ç—å –µ—â–µ —Ü–µ–ª–∏?")
                    return
        
        update.message.reply_text(
            "–ù–∞–ø–∏—à–∏—Ç–µ '–º–µ–Ω—é' –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–±–Ω–æ–≥–æ –º–µ–Ω—é\n"
            "–ò–ª–∏ '—Ç–∞—Ä–∏—Ñ—ã' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤"
        )

def main():
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if not os.path.exists(DATA_FILE):
        save_user_data({})
        print("–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã—Ö")
    
    flask_thread = threading.Thread(target=run_flask)
    flask_thread.daemon = True
    flask_thread.start()
    
    updater = Updater(BOT_TOKEN, use_context=True)
    dispatcher = updater.dispatcher
    
    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))
    
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —Å JSON —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º...")
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
